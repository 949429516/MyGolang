session以key-value的形式存放在服务端 xxxyyy:islogin=true...
保存在cookie中发送给客户端保存  session_id:xxxyyy

1.设计一个通用的session服务，支持内存和redis存储
2.session模块设计
    2.1 本质上三k-v系统，通过key进行增删改查
    2.2 session可以存在内存或redis
    2.3 
        session-->sessionMgr           多对一的关系
        每个用户-->一个session-->多个k-v  一对多
3.session接口设计
    3.1 Set()
    3.2 Get()
    3.3 Del()
    3.4 Save()  session存储,使用的时候加载，redis实现延迟加载
4.sessionMgr接口设计
    4.1 Init()初始化，加载redis地址
    4.2 CreateSession() 创建新的session
    4.3 GetSession() 通过sessionid获取session对象
5.MemonySession设计
    5.1 定义MemonySession对象(字段:sessionid,存kv的map,读写锁)
    5.2 构造函数,为了获取对象
    5.3 Set() Get()  Del() Save() 
6.MemonySessionMgr设计
    6.1 定义MemonySessionMgr对象(字段：存放所有的session的map,读写锁)
    6.2 Init()
    6.3 CreateSession()
    6.4 GetSession()
7.RedisSession设计
    7.1 定义RedisSession对象(字段:sessionId,存kv的map，读写锁，redis连接池，记录内从中map是否被修改的标记)
    7.2 构造函数
    7.3 Set() 先放到内存中map Get() 获取数据实现延迟加载 Del() Save() 将session存放到redis
8.RedisSessionMgr设计
    8.1 定义RedisSessionMgr对象(字段:redis地址、redis密码、连接池、读写锁、map)
    8.2 构造函数
    8.3 Init()
    8.4 CreateSession()
    8.5 GetSession()